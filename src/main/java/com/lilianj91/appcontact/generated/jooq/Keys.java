/*
 * This file is generated by jOOQ.
 */
package com.lilianj91.appcontact.generated.jooq;


import com.lilianj91.appcontact.generated.jooq.tables.Contact;
import com.lilianj91.appcontact.generated.jooq.tables.ContactSkill;
import com.lilianj91.appcontact.generated.jooq.tables.Skill;
import com.lilianj91.appcontact.generated.jooq.tables.records.ContactRecord;
import com.lilianj91.appcontact.generated.jooq.tables.records.ContactSkillRecord;
import com.lilianj91.appcontact.generated.jooq.tables.records.SkillRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * contact.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ContactRecord> PK_CONTACT_EMAIL = Internal.createUniqueKey(Contact.CONTACT_, DSL.name("pk_contact_email"), new TableField[] { Contact.CONTACT_.EMAIL }, true);
    public static final UniqueKey<ContactSkillRecord> PK_CONTACT_SKILL_CONTACT_EMAIL_SKILL_NAME = Internal.createUniqueKey(ContactSkill.CONTACT_SKILL, DSL.name("pk_contact_skill_contact_email_skill_name"), new TableField[] { ContactSkill.CONTACT_SKILL.FK_CONTACT_EMAIL, ContactSkill.CONTACT_SKILL.FK_SKILL_NAME }, true);
    public static final UniqueKey<SkillRecord> PK_SKILL_NAME = Internal.createUniqueKey(Skill.SKILL, DSL.name("pk_skill_name"), new TableField[] { Skill.SKILL.NAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ContactSkillRecord, ContactRecord> CONTACT_SKILL__FK_CONTACT_SKILL_CONTACT_EMAIL = Internal.createForeignKey(ContactSkill.CONTACT_SKILL, DSL.name("fk_contact_skill_contact_email"), new TableField[] { ContactSkill.CONTACT_SKILL.FK_CONTACT_EMAIL }, Keys.PK_CONTACT_EMAIL, new TableField[] { Contact.CONTACT_.EMAIL }, true);
    public static final ForeignKey<ContactSkillRecord, SkillRecord> CONTACT_SKILL__FK_CONTACT_SKILL_SKILL_NAME = Internal.createForeignKey(ContactSkill.CONTACT_SKILL, DSL.name("fk_contact_skill_skill_name"), new TableField[] { ContactSkill.CONTACT_SKILL.FK_SKILL_NAME }, Keys.PK_SKILL_NAME, new TableField[] { Skill.SKILL.NAME }, true);
}
