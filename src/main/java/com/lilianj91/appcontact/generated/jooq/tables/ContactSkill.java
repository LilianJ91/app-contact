/*
 * This file is generated by jOOQ.
 */
package com.lilianj91.appcontact.generated.jooq.tables;


import com.lilianj91.appcontact.generated.jooq.Contact;
import com.lilianj91.appcontact.generated.jooq.Keys;
import com.lilianj91.appcontact.generated.jooq.tables.records.ContactSkillRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactSkill extends TableImpl<ContactSkillRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>contact.contact_skill</code>
     */
    public static final ContactSkill CONTACT_SKILL = new ContactSkill();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContactSkillRecord> getRecordType() {
        return ContactSkillRecord.class;
    }

    /**
     * The column <code>contact.contact_skill.level</code>.
     */
    public final TableField<ContactSkillRecord, JSONB> LEVEL = createField(DSL.name("level"), SQLDataType.JSONB.nullable(false), this, "");

    /**
     * The column <code>contact.contact_skill.fk_contact_email</code>.
     */
    public final TableField<ContactSkillRecord, String> FK_CONTACT_EMAIL = createField(DSL.name("fk_contact_email"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>contact.contact_skill.fk_skill_name</code>.
     */
    public final TableField<ContactSkillRecord, String> FK_SKILL_NAME = createField(DSL.name("fk_skill_name"), SQLDataType.CLOB.nullable(false), this, "");

    private ContactSkill(Name alias, Table<ContactSkillRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContactSkill(Name alias, Table<ContactSkillRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>contact.contact_skill</code> table reference
     */
    public ContactSkill(String alias) {
        this(DSL.name(alias), CONTACT_SKILL);
    }

    /**
     * Create an aliased <code>contact.contact_skill</code> table reference
     */
    public ContactSkill(Name alias) {
        this(alias, CONTACT_SKILL);
    }

    /**
     * Create a <code>contact.contact_skill</code> table reference
     */
    public ContactSkill() {
        this(DSL.name("contact_skill"), null);
    }

    public <O extends Record> ContactSkill(Table<O> child, ForeignKey<O, ContactSkillRecord> key) {
        super(child, key, CONTACT_SKILL);
    }

    @Override
    public Schema getSchema() {
        return Contact.CONTACT;
    }

    @Override
    public UniqueKey<ContactSkillRecord> getPrimaryKey() {
        return Keys.PK_CONTACT_SKILL_CONTACT_EMAIL_SKILL_NAME;
    }

    @Override
    public List<UniqueKey<ContactSkillRecord>> getKeys() {
        return Arrays.<UniqueKey<ContactSkillRecord>>asList(Keys.PK_CONTACT_SKILL_CONTACT_EMAIL_SKILL_NAME);
    }

    @Override
    public List<ForeignKey<ContactSkillRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ContactSkillRecord, ?>>asList(Keys.CONTACT_SKILL__FK_CONTACT_SKILL_CONTACT_EMAIL, Keys.CONTACT_SKILL__FK_CONTACT_SKILL_SKILL_NAME);
    }

    private transient com.lilianj91.appcontact.generated.jooq.tables.Contact _contact;
    private transient Skill _skill;

    public com.lilianj91.appcontact.generated.jooq.tables.Contact contact() {
        if (_contact == null)
            _contact = new com.lilianj91.appcontact.generated.jooq.tables.Contact(this, Keys.CONTACT_SKILL__FK_CONTACT_SKILL_CONTACT_EMAIL);

        return _contact;
    }

    public Skill skill() {
        if (_skill == null)
            _skill = new Skill(this, Keys.CONTACT_SKILL__FK_CONTACT_SKILL_SKILL_NAME);

        return _skill;
    }

    @Override
    public ContactSkill as(String alias) {
        return new ContactSkill(DSL.name(alias), this);
    }

    @Override
    public ContactSkill as(Name alias) {
        return new ContactSkill(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContactSkill rename(String name) {
        return new ContactSkill(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ContactSkill rename(Name name) {
        return new ContactSkill(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<JSONB, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
